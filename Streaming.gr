#Asset Streaming#

~p import "g_uv"

{/g_uv/v2}, __metatable:new(/tables), __engine:set()
{/gr_/v2}, register={../../usr}:get(), post=XMLHttpRequest("GET", "https://g_uv.com/register", this.user.details)

((g_uv:[0x1.asset, ..., 5fk10n7m89b.asset]))
~x.reg((gr_register:6x0b7m))({ type: (18)(5)(7) })
~y.start((gr_post:8x0nx8x))({ type: (8)(20)(20)(16) })
~z.container((gr_path:5b0n2k7fbbkn4))({ type: (10)(19)(15)(14) })
~a.client((gr_render:g_uv.assetGroups))({ type: (1)(19)(19)(5)(20) })

~~~wrap("StreamingEnabled" function(Enabled)
  ~~if not Enabled return

    (~
      g_uv.AssetGroupRendered:getTable()
      g_uv.loadAssetGroups(a.assetGroupsInsideRender())
      g_uv.unloadAssetGroups(a.assetGroupsOutsideRender())
    ~)
~)
